summarise_if(is.numeric, mean, na.rm = T) %>%
mutate(
`Accessible Outside of Class` = accessible.outside.class/total_tags * 100,
`Amazing Lectures` = amazing.lectures/total_tags * 100,
`Beware of Pop Quizzes` = beware.of.pop.quizzes/total_tags * 100,
Caring = caring/total_tags * 100,
`Clear Grading Criteria` = clear.grading.criteria/total_tags * 100,
`Extra Credit` = extra.credit/total_tags * 100,
`Get Ready to Read` = get.ready.to.read/total_tags * 100,
`Gives Good Feedback` = gives.good.feedback/total_tags * 100,
`Graded by Few Things` = graded.by.few.things/total_tags * 100,
`Group Projects` = group.projects/total_tags * 100,
Hilarious = hilarious/total_tags * 100,
Inspirational = inspirational/total_tags * 100,
`Lecture Heavy` = lecture.heavy/total_tags * 100,
`Lots of Homework` = lots.of.homework/total_tags * 100,
`Participation Matters` = participation.matters/total_tags * 100,
Respected = respected/total_tags * 100,
`Skip Class? You won't Pass` = skip.class.you.wont.pass/total_tags * 100,
`So Many Papers` = so.many.papers/total_tags * 100,
`Test Heavy` = test.heavy/total_tags * 100,
`Tough Grader` = tough.grader/total_tags * 100)
grouped_profs = grouped_profs %>% rename(overall_score_mean = overall_score, difficulty_score_mean = difficulty_score)
grouped_profs[, -(5:27)]
grouped_profs
grouped_profs[, c(1:4, 28:47)] %>% group_by(school, department) %>% summarise_if(is.numeric, mean, na.rm = T)
profs$school[, school == "qns"]
profs$school[, profs$school == "qns"]
profs$school[profs$school == "qns",]
profs[profs$school == "qns",]
profs[profs$school == "qns", ]$school == "QNS"
profs[profs$school == "qns", ]$school = "QNS"
profs[profs$school == "qns", ]$school = "QNS"
profs[profs$school == "king", ]$school = "KNG"
profs[profs$school == "nas", ]$school = "NAS"
profs[profs$school == "lg", ]$school = "LAG"
profs[profs$school == "man", ]$school = "MAN"
grouped_profs =
profs %>% group_by(name, school, sex, department) %>%
summarise_if(is.numeric, mean, na.rm = T) %>%
mutate(
`Accessible Outside of Class` = accessible.outside.class/total_tags * 100,
`Amazing Lectures` = amazing.lectures/total_tags * 100,
`Beware of Pop Quizzes` = beware.of.pop.quizzes/total_tags * 100,
Caring = caring/total_tags * 100,
`Clear Grading Criteria` = clear.grading.criteria/total_tags * 100,
`Extra Credit` = extra.credit/total_tags * 100,
`Get Ready to Read` = get.ready.to.read/total_tags * 100,
`Gives Good Feedback` = gives.good.feedback/total_tags * 100,
`Graded by Few Things` = graded.by.few.things/total_tags * 100,
`Group Projects` = group.projects/total_tags * 100,
Hilarious = hilarious/total_tags * 100,
Inspirational = inspirational/total_tags * 100,
`Lecture Heavy` = lecture.heavy/total_tags * 100,
`Lots of Homework` = lots.of.homework/total_tags * 100,
`Participation Matters` = participation.matters/total_tags * 100,
Respected = respected/total_tags * 100,
`Skip Class? You won't Pass` = skip.class.you.wont.pass/total_tags * 100,
`So Many Papers` = so.many.papers/total_tags * 100,
`Test Heavy` = test.heavy/total_tags * 100,
`Tough Grader` = tough.grader/total_tags * 100)
grouped_profs = grouped_profs %>% rename(overall_score_mean = overall_score, difficulty_score_mean = difficulty_score)
grouped_profs[, -(5:27)]
x = grouped_profs[, c(1:4, 28:47)] %>% group_by(school, department) %>% summarise_if(is.numeric, mean, na.rm = T)
write.csv(x, "grouped_profs.csv")
profs = merge(profs, grouped_profs[, -(5:27)], by = c("name"), suffixes = c("", "_y")) %>% select(-school_y, -sex_y, -department_y)
write.csv(profs, "profs.csv")
profs = merge(profs, grouped_profs[, -(5:27)], by = c("name"), suffixes = c("", "_y")) %>% select(-school_y, -sex_y, -department_y)
write.csv(profs, "profs_cleaned.csv")
profs
grouped_profs =
# profs %>% group_by(name, school, sex, department) %>%
profs %>% group_by(name) %>%
summarise_if(is.numeric, mean, na.rm = T) %>%
mutate(
`Accessible Outside of Class` = accessible.outside.class/total_tags * 100,
`Amazing Lectures` = amazing.lectures/total_tags * 100,
`Beware of Pop Quizzes` = beware.of.pop.quizzes/total_tags * 100,
Caring = caring/total_tags * 100,
`Clear Grading Criteria` = clear.grading.criteria/total_tags * 100,
`Extra Credit` = extra.credit/total_tags * 100,
`Get Ready to Read` = get.ready.to.read/total_tags * 100,
`Gives Good Feedback` = gives.good.feedback/total_tags * 100,
`Graded by Few Things` = graded.by.few.things/total_tags * 100,
`Group Projects` = group.projects/total_tags * 100,
Hilarious = hilarious/total_tags * 100,
Inspirational = inspirational/total_tags * 100,
`Lecture Heavy` = lecture.heavy/total_tags * 100,
`Lots of Homework` = lots.of.homework/total_tags * 100,
`Participation Matters` = participation.matters/total_tags * 100,
Respected = respected/total_tags * 100,
`Skip Class? You won't Pass` = skip.class.you.wont.pass/total_tags * 100,
`So Many Papers` = so.many.papers/total_tags * 100,
`Test Heavy` = test.heavy/total_tags * 100,
`Tough Grader` = tough.grader/total_tags * 100)
grouped_profs = grouped_profs %>% rename(overall_score_mean = overall_score, difficulty_score_mean = difficulty_score)
grouped_profs[, -(5:27)]
profs = merge(profs, grouped_profs[, -(5:27)], by = c("name"), suffixes = c("", "_y")) %>% select(-school_y, -sex_y, -department_y)
library(ggplot2)
library(dplyr)
profs = read.csv("profs.csv", stringsAsFactors = F)
profs = profs %>% select(-X, -X.1)
head(profs)
profs$department[grepl("Biological", profs$department)] = "Biology"
profs$department[grepl("Business Te", profs$department)] = "Business"
profs[profs$department == "Science", ]$department = "Physical Sciences"
profs$department[grepl("Theater|Speech", profs$department)] = "Communication"
profs[profs$name == "Greco, Joseph", ]$department = "Communication"
profs[profs$name == "Sokolski, Patricia", ]$department = "Communication"
profs$department[grepl("Allied", profs$department)] = "Health Science"
profs$department[grepl("Health & Physical Education|Physical Education", profs$department)] = "Physical Ed"
profs$department[grepl("Art", profs$department)] = "Art"
profs$department[grepl("Legal", profs$department)] = "Law"
profs$department[grepl("African|Ethnic|Women", profs$department)] = "Cultural Studies"
profs$department[grepl("Foreign|Spanish", profs$department)] = "Languages"
profs$department[grepl("Info", profs$department)] = "Social Science"
profs[profs$name == "Townsend, Charles", ]$department = "Social Science"
profs[profs$name == "Ruiz, Roberto", ]$department = "Philosophy"
profs$department[grepl("History|Political|Philosophy", profs$department)] = "History, Philosophy, Poly Sci"
profs = profs %>% mutate(chili = ifelse(grepl("True", chili), "attractive", "not attractive"))
profs["total_tags"] = apply(profs[10:29], 1, sum, na.rm = T)
profs[profs$school == "qns", ]$school = "QNS"
profs[profs$school == "king", ]$school = "KNG"
profs[profs$school == "nas", ]$school = "NAS"
profs[profs$school == "lg", ]$school = "LAG"
profs[profs$school == "man", ]$school = "MAN"
grouped_profs =
profs %>% group_by(name, school, sex, department) %>%
summarise_if(is.numeric, mean, na.rm = T) %>%
mutate(
`Accessible Outside of Class` = accessible.outside.class/total_tags * 100,
`Amazing Lectures` = amazing.lectures/total_tags * 100,
`Beware of Pop Quizzes` = beware.of.pop.quizzes/total_tags * 100,
Caring = caring/total_tags * 100,
`Clear Grading Criteria` = clear.grading.criteria/total_tags * 100,
`Extra Credit` = extra.credit/total_tags * 100,
`Get Ready to Read` = get.ready.to.read/total_tags * 100,
`Gives Good Feedback` = gives.good.feedback/total_tags * 100,
`Graded by Few Things` = graded.by.few.things/total_tags * 100,
`Group Projects` = group.projects/total_tags * 100,
Hilarious = hilarious/total_tags * 100,
Inspirational = inspirational/total_tags * 100,
`Lecture Heavy` = lecture.heavy/total_tags * 100,
`Lots of Homework` = lots.of.homework/total_tags * 100,
`Participation Matters` = participation.matters/total_tags * 100,
Respected = respected/total_tags * 100,
`Skip Class? You won't Pass` = skip.class.you.wont.pass/total_tags * 100,
`So Many Papers` = so.many.papers/total_tags * 100,
`Test Heavy` = test.heavy/total_tags * 100,
`Tough Grader` = tough.grader/total_tags * 100)
grouped_profs = grouped_profs %>% rename(overall_score_mean = overall_score, difficulty_score_mean = difficulty_score)
grouped_profs[, -(5:27)]
profs = merge(profs, grouped_profs[, -(5:27)], by = c("name"), suffixes = c("", "_y")) %>% select(-school_y, -sex_y, -department_y)
write.csv(profs, "profs_cleaned.csv")
x = grouped_profs[, c(1:4, 28:47)] %>% group_by(school, department) %>% summarise_if(is.numeric, mean, na.rm = T)
write.csv(x, "grouped_profs.csv")
library(ggplot2)
library(dplyr)
profs = read.csv("profs.csv", stringsAsFactors = F)
profs = profs %>% select(-X, -X.1)
head(profs)
profs$department[grepl("Biological", profs$department)] = "Biology"
profs$department[grepl("Business Te", profs$department)] = "Business"
profs[profs$department == "Science", ]$department = "Physical Sciences"
profs$department[grepl("Theater|Speech", profs$department)] = "Communication"
profs[profs$name == "Greco, Joseph", ]$department = "Communication"
profs[profs$name == "Sokolski, Patricia", ]$department = "Communication"
profs$department[grepl("Allied", profs$department)] = "Health Science"
profs$department[grepl("Health & Physical Education|Physical Education", profs$department)] = "Physical Ed"
profs$department[grepl("Art", profs$department)] = "Art"
profs$department[grepl("Legal", profs$department)] = "Law"
profs$department[grepl("African|Ethnic|Women", profs$department)] = "Cultural Studies"
profs$department[grepl("Foreign|Spanish", profs$department)] = "Languages"
profs$department[grepl("Info", profs$department)] = "Social Science"
profs[profs$name == "Townsend, Charles", ]$department = "Social Science"
profs[profs$name == "Ruiz, Roberto", ]$department = "Philosophy"
profs$department[grepl("History|Political|Philosophy", profs$department)] = "History, Philosophy, Poly Sci"
profs = profs %>% mutate(chili = ifelse(grepl("True", chili), "attractive", "not attractive"))
profs["total_tags"] = apply(profs[10:29], 1, sum, na.rm = T)
profs[profs$school == "qns", ]$school = "QNS"
profs[profs$school == "king", ]$school = "KNG"
profs[profs$school == "nas", ]$school = "NAS"
profs[profs$school == "lg", ]$school = "LAG"
profs[profs$school == "man", ]$school = "MAN"
grouped_profs =
profs %>% group_by(name) %>%
summarise_if(is.numeric, mean, na.rm = T) %>%
mutate(
`Accessible Outside of Class` = accessible.outside.class/total_tags * 100,
`Amazing Lectures` = amazing.lectures/total_tags * 100,
`Beware of Pop Quizzes` = beware.of.pop.quizzes/total_tags * 100,
Caring = caring/total_tags * 100,
`Clear Grading Criteria` = clear.grading.criteria/total_tags * 100,
`Extra Credit` = extra.credit/total_tags * 100,
`Get Ready to Read` = get.ready.to.read/total_tags * 100,
`Gives Good Feedback` = gives.good.feedback/total_tags * 100,
`Graded by Few Things` = graded.by.few.things/total_tags * 100,
`Group Projects` = group.projects/total_tags * 100,
Hilarious = hilarious/total_tags * 100,
Inspirational = inspirational/total_tags * 100,
`Lecture Heavy` = lecture.heavy/total_tags * 100,
`Lots of Homework` = lots.of.homework/total_tags * 100,
`Participation Matters` = participation.matters/total_tags * 100,
Respected = respected/total_tags * 100,
`Skip Class? You won't Pass` = skip.class.you.wont.pass/total_tags * 100,
`So Many Papers` = so.many.papers/total_tags * 100,
`Test Heavy` = test.heavy/total_tags * 100,
`Tough Grader` = tough.grader/total_tags * 100)
grouped_profs = grouped_profs %>% rename(overall_score_mean = overall_score, difficulty_score_mean = difficulty_score)
grouped_profs[, -(5:27)]
grouped_profs
grouped_profs =
profs %>% group_by(name, school, sex, department) %>%
summarise_if(is.numeric, mean, na.rm = T) %>%
mutate(
`Accessible Outside of Class` = accessible.outside.class/total_tags * 100,
`Amazing Lectures` = amazing.lectures/total_tags * 100,
`Beware of Pop Quizzes` = beware.of.pop.quizzes/total_tags * 100,
Caring = caring/total_tags * 100,
`Clear Grading Criteria` = clear.grading.criteria/total_tags * 100,
`Extra Credit` = extra.credit/total_tags * 100,
`Get Ready to Read` = get.ready.to.read/total_tags * 100,
`Gives Good Feedback` = gives.good.feedback/total_tags * 100,
`Graded by Few Things` = graded.by.few.things/total_tags * 100,
`Group Projects` = group.projects/total_tags * 100,
Hilarious = hilarious/total_tags * 100,
Inspirational = inspirational/total_tags * 100,
`Lecture Heavy` = lecture.heavy/total_tags * 100,
`Lots of Homework` = lots.of.homework/total_tags * 100,
`Participation Matters` = participation.matters/total_tags * 100,
Respected = respected/total_tags * 100,
`Skip Class? You won't Pass` = skip.class.you.wont.pass/total_tags * 100,
`So Many Papers` = so.many.papers/total_tags * 100,
`Test Heavy` = test.heavy/total_tags * 100,
`Tough Grader` = tough.grader/total_tags * 100)
grouped_profs = grouped_profs %>% rename(overall_score_mean = overall_score, difficulty_score_mean = difficulty_score)
grouped_profs[, -(5:27)]
merge(profs, grouped_profs[, -(5:27)], by = c("name"), suffixes = c("", "_y")) %>% select(-school_y, -sex_y, -department_y)
profs = merge(profs, grouped_profs[, -(5:27)], by = c("name"), suffixes = c("", "_y")) %>% select(-school_y, -sex_y, -department_y)
profs
df = profs %>% filter(school == "QNS", department == c("Accounting", "Biology", "Business"))
to_merge = as.data.frame(table(df$overall_score, df$difficulty_score, df$sex))
dummy = data.frame(Var1 = as.factor(rep(c(1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5), 10)),
Var2 = as.factor(rep(1:5, 18)),
Var3 = as.factor(c(rep("female", 45), rep("male", 45))))
all = merge(dummy, to_merge, on = c(Var1, Var2, Var3), all.x = T)
all[is.na(all)] = 0
all$prop = 0
names(all) = c("overall_score", "difficulty_score", "sex", "count", "proportion")
all = all %>% arrange(sex)
all[c(1:45), 5] = round(all[1:45, 4] / sum(all[1:45, 4]) * 100, 1)
all[c(46:90), 5] = round(all[46:90, 4] / sum(all[46:90, 4]) * 100, 1)
ggplot(all, aes(difficulty_score, overall_score, fill = count)) +
geom_tile() +
geom_text(aes(label = proportion, color = sex, hjust = ifelse(sex == "female", 1.5, -0.5))) +
scale_colour_manual("% Sex", values = c("red","green"))
df = profs %>% filter(department == "Physics")
all = as.data.frame(table(df$overall_score, df$difficulty_score, df$sex))
all$prop = 0
all[c(1:45), 5] = round(all[1:45, 4] / sum(all[1:45, 4]) * 100, 1)
all[c(46:90), 5] = round(all[46:90, 4] / sum(all[46:90, 4]) * 100, 1)
ggplot(all, aes(Var2, Var1, fill = Freq)) +
geom_tile() +
geom_text(aes(label = prop,colour = Var3, hjust = ifelse(Var3 == "female", 1.5, -0.5))) +
scale_colour_manual("% Sex", values = c("red","green"))
profs %>%
group_by(sex, difficulty_score_fac, difficulty_score, chili) %>%
summarise(abc = mean(overall_score)) %>%
ggplot(aes(x = difficulty_score_fac, y = abc, fill = sex)) +
geom_bar(stat = "identity", position = "dodge")
profs$difficulty_score_fac = as.factor(profs$difficulty_score)
profs %>%
group_by(sex, difficulty_score_fac, difficulty_score, chili) %>%
summarise(abc = mean(overall_score)) %>%
ggplot(aes(x = difficulty_score_fac, y = abc, fill = sex)) +
geom_bar(stat = "identity", position = "dodge")
ggplot(xyz, aes(x = school, y = score, fill = rating)) + geom_bar(stat = "identity", position = "dodge")
x
profs
profs %>%
group_by(sex, difficulty_score_fac, difficulty_score, chili) %>%
summarise(abc = mean(overall_score)) %>%
ggplot(aes(x = difficulty_score_fac, y = abc, fill = sex)) +
geom_bar(stat = "identity", position = "dodge")
x = profs %>%
group_by(sex, difficulty_score_fac, difficulty_score, chili) %>%
summarise(abc = mean(overall_score), xyz = sd(overall_score))
x
x = profs %>%
group_by(difficulty_score_fac, difficulty_score) %>%
summarise(abc = mean(overall_score), xyz = sd(overall_score))
x
x = profs %>%
group_by(difficulty_score_fac, difficulty_score) %>%
summarise(mean_ = mean(overall_score), sd_ = sd(overall_score))
x
x = profs %>%
group_by(difficulty_score_fac, difficulty_score) %>%
summarise(mean_ = mean(overall_score), sd_ = sd(overall_score), count = n())
x
summarySE = function(data = NULL, measurevar, groupvars = NULL, na.rm = FALSE,
conf.interval = .95, .drop = TRUE) {
library(plyr)
length2 = function (x, na.rm = FALSE) {
if (na.rm) sum(!is.na(x))
else length(x)
}
datac = ddply(data, groupvars, .drop = .drop,
.fun = function(xx, col) {
c(N    = length2(xx[[col]], na.rm = na.rm),
mean = mean   (xx[[col]], na.rm = na.rm),
sd   = sd     (xx[[col]], na.rm = na.rm)
)
},
measurevar
)
datac = rename(datac, c("mean" = measurevar))
datac$se = datac$sd / sqrt(datac$N)
ciMult = qt(conf.interval/2 + .5, datac$N-1)
datac$ci = datac$se * ciMult
return(datac)
}
x = profs %>%
group_by(difficulty_score_fac, difficulty_score)
summarySE(x)
library(dplyr)
detach("package:plyr", unload=TRUE)
library(dplyr)
x = profs %>%
group_by(difficulty_score_fac, difficulty_score) %>%
summarise(mean_ = mean(overall_score), sd_ = sd(overall_score), count = n())
x
x$error_bar = 1.96*(x$sd_/sqrt(x$count))
x
x = profs %>%
group_by(difficulty_score_fac) %>%
summarise(mean_ = mean(overall_score), sd_ = sd(overall_score), count = n())
x$error_bar = 1.96*(x$sd_/sqrt(x$count))
x
x %>%
ggplot(aes(x = difficulty_score_fac, y = mean_)) +
geom_errorbar(aes(ymin = mean_ - error_bar, ymax = mean_ + error_bar)) + geom_point()
x %>%
ggplot(aes(x = difficulty_score_fac, y = mean_)) +
geom_errorbar(aes(ymin = mean_ - error_bar, ymax = mean_ + error_bar), width = 0.2) + geom_point()
x %>%
ggplot(aes(x = difficulty_score_fac, y = mean_)) +
geom_errorbar(aes(ymin = mean_ - error_bar, ymax = mean_ + error_bar), width = 0.25) + geom_point()
x
x = profs %>%
group_by(difficulty_score_fac) %>%
summarise(mean_ = mean(overall_score), sd_ = sd(overall_score), count = n())
x = profs %>%
group_by(difficulty_score_fac) %>%
summarise(mean_ = mean(overall_score), sd_ = sd(overall_score), count = n())
summarise(mean_ = mean(overall_score), sd_ = sd(overall_score), count = n())
x = profs %>%
group_by(difficulty_score_fac) %>%
summarise(mean_ = mean(overall_score), sd_ = sd(overall_score), count = n())
summarySE = function(data = NULL, measurevar, groupvars = NULL, na.rm = FALSE,
conf.interval = .95, .drop = TRUE) {
library(plyr)
length2 = function (x, na.rm = FALSE) {
if (na.rm) sum(!is.na(x))
else length(x)
}
datac = ddply(data, groupvars, .drop = .drop,
.fun = function(xx, col) {
c(N    = length2(xx[[col]], na.rm = na.rm),
mean = mean   (xx[[col]], na.rm = na.rm),
sd   = sd     (xx[[col]], na.rm = na.rm)
)
},
measurevar
)
datac = rename(datac, c("mean" = measurevar))
datac$se = datac$sd / sqrt(datac$N)
ciMult = qt(conf.interval/2 + .5, datac$N-1)
datac$ci = datac$se * ciMult
return(datac)
}
x %>%
ggplot(aes(x = difficulty_score_fac, y = mean_)) +
geom_errorbar(aes(ymin = mean_ - error_bar, ymax = mean_ + error_bar), width = 0.25) + geom_point()
x %>%
ggplot(aes(x = difficulty_score_fac, y = mean_)) +
geom_errorbar(aes(ymin = mean_ - error_bar, ymax = mean_ + error_bar), width = 0.25) + geom_point()
x %>%
ggplot(aes(x = difficulty_score_fac, y = mean_)) +
geom_errorbar(aes(ymin = mean_ - error_bar, ymax = mean_ + error_bar), width = 0.25) + geom_point()
x %>%
ggplot(aes(x = difficulty_score_fac, y = mean_)) +
geom_errorbar(aes(ymin = mean_ - error_bar, ymax = mean_ + error_bar)) + geom_point()
x %>%
ggplot(aes(x = difficulty_score_fac, y = mean_)) +
geom_errorbar(aes(ymin = mean_ - error_bar, ymax = mean_ + error_bar)) + geom_point()
x %>%
ggplot(aes(x = difficulty_score_fac, y = mean_)) + geom_errorbar(aes(ymin = mean_ - error_bar, ymax = mean_ + error_bar)) + geom_point()
x %>% ggplot(aes(x = difficulty_score_fac, y = mean_)) + geom_errorbar(aes(ymin = mean_ - error_bar, ymax = mean_ + error_bar)) + geom_point()
x %>% ggplot(aes(x = difficulty_score_fac, y = mean_)) + geom_errorbar(aes(ymin = mean_ - error_bar, ymax = mean_ + error_bar)) + geom_point()
library(ggplot2)
library(dplyr)
x %>% ggplot(aes(x = difficulty_score_fac, y = mean_)) + geom_errorbar(aes(ymin = mean_ - error_bar, ymax = mean_ + error_bar)) + geom_point()
x = profs %>%
group_by(difficulty_score_fac) %>%
summarise(mean_ = mean(overall_score), sd_ = sd(overall_score), count = n())
x$error_bar = 1.96*(x$sd_/sqrt(x$count))
x %>% ggplot(aes(x = difficulty_score_fac, y = mean_)) + geom_errorbar(aes(ymin = mean_ - error_bar, ymax = mean_ + error_bar)) + geom_point()
x %>%
ggplot(aes(x = difficulty_score_fac, y = mean_)) +
geom_errorbar(aes(ymin = mean_ - error_bar, ymax = mean_ + error_bar), width = 0.25) +
geom_point()
x %>%
ggplot(aes(x = difficulty_score_fac, y = mean_)) +
geom_errorbar(aes(ymin = mean_ - error_bar, ymax = mean_ + error_bar), width = 0.25) +
geom_point() + ylim(c(0, 5))
x %>%
ggplot(aes(x = difficulty_score_fac, y = mean_)) + geom_violin()
profs %>%
group_by(difficulty_score_fac) %>%
summarise(mean_ = mean(overall_score), sd_ = sd(overall_score), count = n()) %>%
ggplot(aes(x = difficulty_score_fac, y = mean_)) + geom_violin()
profs %>%
group_by(difficulty_score) %>%
summarise(mean_ = mean(overall_score), sd_ = sd(overall_score), count = n()) %>%
ggplot(aes(x = difficulty_score_fac, y = mean_)) + geom_violin()
profs %>%
group_by(difficulty_score) %>%
summarise(mean_ = mean(overall_score), sd_ = sd(overall_score), count = n()) %>%
ggplot(aes(x = difficulty_score, y = mean_)) + geom_violin()
profs %>%
group_by(difficulty_score_fac) %>%
summarise(mean_ = mean(overall_score), sd_ = sd(overall_score), count = n()) %>%
ggplot(aes(x = difficulty_score_fac, y = mean_)) + geom_violin()
profs %>%
group_by(difficulty_score_fac) %>% ggplot(aes(x = difficulty_score_fac, y = overall_score)) + geom_violin()
library(ggplot2)
library(dplyr)
profs = read.csv("profs.csv", stringsAsFactors = F)
profs = profs %>% select(-X, -X.1)
profs$department[grepl("Biological", profs$department)] = "Biology"
profs$department[grepl("Business Te", profs$department)] = "Business"
profs[profs$department == "Science", ]$department = "Physical Sciences"
profs$department[grepl("Theater|Speech", profs$department)] = "Communication"
profs[profs$name == "Greco, Joseph", ]$department = "Communication"
profs[profs$name == "Sokolski, Patricia", ]$department = "Communication"
profs$department[grepl("Allied", profs$department)] = "Health Science"
profs$department[grepl("Health & Physical Education|Physical Education", profs$department)] = "Physical Ed"
profs$department[grepl("Art", profs$department)] = "Art"
profs$department[grepl("Legal", profs$department)] = "Law"
profs$department[grepl("African|Ethnic|Women", profs$department)] = "Cultural Studies"
profs$department[grepl("Foreign|Spanish", profs$department)] = "Languages"
profs$department[grepl("Info", profs$department)] = "Social Science"
profs[profs$name == "Townsend, Charles", ]$department = "Social Science"
profs[profs$name == "Ruiz, Roberto", ]$department = "Philosophy"
profs$department[grepl("History|Political|Philosophy", profs$department)] = "History, Philosophy, Poly Sci"
profs = profs %>% mutate(chili = ifelse(grepl("True", chili), "attractive", "not attractive"))
profs["total_tags"] = apply(profs[10:29], 1, sum, na.rm = T)
profs[profs$school == "qns", ]$school = "QNS"
profs[profs$school == "king", ]$school = "KNG"
profs[profs$school == "nas", ]$school = "NAS"
profs[profs$school == "lg", ]$school = "LAG"
profs[profs$school == "man", ]$school = "MAN"
grouped_profs =
profs %>% group_by(name, school, sex, department) %>%
summarise_if(is.numeric, mean, na.rm = T) %>%
mutate(
`Accessible Outside of Class` = accessible.outside.class/total_tags * 100,
`Amazing Lectures` = amazing.lectures/total_tags * 100,
`Beware of Pop Quizzes` = beware.of.pop.quizzes/total_tags * 100,
Caring = caring/total_tags * 100,
`Clear Grading Criteria` = clear.grading.criteria/total_tags * 100,
`Extra Credit` = extra.credit/total_tags * 100,
`Get Ready to Read` = get.ready.to.read/total_tags * 100,
`Gives Good Feedback` = gives.good.feedback/total_tags * 100,
`Graded by Few Things` = graded.by.few.things/total_tags * 100,
`Group Projects` = group.projects/total_tags * 100,
Hilarious = hilarious/total_tags * 100,
Inspirational = inspirational/total_tags * 100,
`Lecture Heavy` = lecture.heavy/total_tags * 100,
`Lots of Homework` = lots.of.homework/total_tags * 100,
`Participation Matters` = participation.matters/total_tags * 100,
Respected = respected/total_tags * 100,
`Skip Class? You won't Pass` = skip.class.you.wont.pass/total_tags * 100,
`So Many Papers` = so.many.papers/total_tags * 100,
`Test Heavy` = test.heavy/total_tags * 100,
`Tough Grader` = tough.grader/total_tags * 100)
grouped_profs = grouped_profs %>% rename(overall_score_mean = overall_score, difficulty_score_mean = difficulty_score)
grouped_profs[, -(5:27)]
profs = merge(profs, grouped_profs[, -(5:27)], by = c("name"), suffixes = c("", "_y")) %>% select(-school_y, -sex_y, -department_y)
x = grouped_profs[, c(1:4, 28:47)] %>% group_by(school, department) %>% summarise_if(is.numeric, mean, na.rm = T)
shiny::runApp('RMP')
profs %>% filter(department == "Biology") %>% groupby(school) %>% select(content)
profs %>% filter(department == "Biology") %>% group_by(school) %>% select(content)
profs
profs %>% filter(department == "Biology") %>% group_by(school) %>% select(school, content)
z = profs %>% filter(department == "Biology") %>% group_by(school) %>% select(school, content)
z[z$school == "MAN", ]
z[z$school == "MAN", ][2]
z[z$school == "MAN", ][[2]]
man_vec = z[z$school == "MAN", ][[2]]
lag_vec = z[z$school == "LAG", ][[2]]
qns_vec = z[z$school == "QNS", ][[2]]
kng_vec = z[z$school == "KNG", ][[2]]
nas_vec = z[z$school == "NAS", ][[2]]
"hi"
runApp('RMP')
runApp('RMP')
runApp('RMP')
runApp('RMP')
runApp('RMP')
runApp('RMP')
