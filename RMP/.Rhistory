runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(grouped_profs)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
my_hist = hist(iris$Sepal.Length)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(grouped_profs)
View(grouped_profs)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(grouped_profs)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
grouped_profs = NULL
runApp()
grouped_profs = NULL
runApp()
profs = NULL
runApp()
profs = NULL
grouped_profs = NULL
runApp()
grouped_profs = NULL
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(ggplot2)
library(dplyr)
profs = read.csv("profs.csv", stringsAsFactors = F)
profs = profs %>% select(-X, -X.1)
profs$department[grepl("Biological", profs$department)] = "Biology"
profs$department[grepl("Business Te", profs$department)] = "Business"
profs[profs$department == "Science", ]$department = "Physical Sciences"
profs$department[grepl("Theater|Speech", profs$department)] = "Communication"
profs[profs$name == "Greco, Joseph", ]$department = "Communication"
profs[profs$name == "Sokolski, Patricia", ]$department = "Communication"
profs$department[grepl("Allied", profs$department)] = "Health Science"
profs$department[grepl("Health & Physical Education|Physical Education", profs$department)] = "Physical Ed"
profs$department[grepl("Art", profs$department)] = "Art"
profs$department[grepl("Legal", profs$department)] = "Law"
profs$department[grepl("African|Ethnic|Women", profs$department)] = "Cultural Studies"
profs$department[grepl("Foreign|Spanish", profs$department)] = "Languages"
profs$department[grepl("Info", profs$department)] = "Social Science"
profs[profs$name == "Townsend, Charles", ]$department = "Social Science"
profs[profs$name == "Ruiz, Roberto", ]$department = "Philosophy"
profs$department[grepl("History|Political|Philosophy", profs$department)] = "History, Philosophy, Poly Sci"
profs = profs %>% mutate(chili = ifelse(grepl("True", chili), "attractive", "not attractive"))
profs["total_tags"] = apply(profs[10:29], 1, sum, na.rm = T)
profs[profs$school == "qns", ]$school = "QNS"
profs[profs$school == "king", ]$school = "KNG"
profs[profs$school == "nas", ]$school = "NAS"
profs[profs$school == "lg", ]$school = "LAG"
profs[profs$school == "man", ]$school = "MAN"
grouped_profs =
profs %>% group_by(name, school, sex, department) %>%
summarise_if(is.numeric, mean, na.rm = T) %>%
mutate(
`Accessible Outside of Class` = accessible.outside.class/total_tags * 100,
`Amazing Lectures` = amazing.lectures/total_tags * 100,
`Beware of Pop Quizzes` = beware.of.pop.quizzes/total_tags * 100,
Caring = caring/total_tags * 100,
`Clear Grading Criteria` = clear.grading.criteria/total_tags * 100,
`Extra Credit` = extra.credit/total_tags * 100,
`Get Ready to Read` = get.ready.to.read/total_tags * 100,
`Gives Good Feedback` = gives.good.feedback/total_tags * 100,
`Graded by Few Things` = graded.by.few.things/total_tags * 100,
`Group Projects` = group.projects/total_tags * 100,
Hilarious = hilarious/total_tags * 100,
Inspirational = inspirational/total_tags * 100,
`Lecture Heavy` = lecture.heavy/total_tags * 100,
`Lots of Homework` = lots.of.homework/total_tags * 100,
`Participation Matters` = participation.matters/total_tags * 100,
Respected = respected/total_tags * 100,
`Skip Class? You won't Pass` = skip.class.you.wont.pass/total_tags * 100,
`So Many Papers` = so.many.papers/total_tags * 100,
`Test Heavy` = test.heavy/total_tags * 100,
`Tough Grader` = tough.grader/total_tags * 100)
grouped_profs = grouped_profs %>% rename(overall_score_mean = overall_score, difficulty_score_mean = difficulty_score)
x = grouped_profs[, c(1:4, 28:47)] %>% group_by(school, department) %>% summarise_if(is.numeric, mean, na.rm = T)
z = x %>% select(acc.out.class.prop, department, school) %>%
filter(department == "Accounting") %>%
group_by(school) %>%
summarise(abc = mean(acc.out.class.prop, na.rm = T))
x = grouped_profs[, c(1:4, 28:47)] %>% group_by(school, department) %>% summarise_if(is.numeric, mean, na.rm = T)
z = x %>% select(acc.out.class.prop, department, school) %>%
filter(department == "Accounting") %>%
group_by(school) %>%
summarise(abc = mean(acc.out.class.prop, na.rm = T))
z = x %>% select(`Caring`, department, school) %>%
filter(department == "Accounting") %>%
group_by(school) %>%
summarise(abc = mean(acc.out.class.prop, na.rm = T))
z = x %>% select(`Caring`, department, school) %>%
filter(department == "Accounting") %>%
group_by(school) %>%
summarise(abc = mean(Caring, na.rm = T))
z[is.na(z)] = 0
ggplot(z, aes(x = school, y = abc, fill = school)) + geom_bar(stat = "identity")
z = x %>% select(`Accessible Outside of Class`, department, school) %>%
filter(department == "Accounting") %>%
group_by(school) %>%
summarise(abc = mean(`Accessible Outside of Class``, na.rm = T))
z[is.na(z)] = 0
ggplot(z, aes(x = school, y = abc, fill = school)) + geom_bar(stat = "identity")
ggplot(z, aes(x = school, y = abc, fill = school)) + geom_bar(stat = "identity")
z = x %>% select(`Accessible Outside of Class`, department, school) %>%
z = x %>% select("Accessible Outside of Class", department, school) %>%
filter(department == "Accounting") %>%
group_by(school) %>%
summarise(abc = mean("Accessible Outside of Class", na.rm = T))
z[is.na(z)] = 0
ggplot(z, aes(x = school, y = abc, fill = school)) + geom_bar(stat = "identity")
z = x %>% select(`Accessible Outside of Class`, department, school) %>%
filter(department == "Accounting") %>%
group_by(school) %>%
summarise(abc = mean(`Accessible Outside of Class`, na.rm = T))
z[is.na(z)] = 0
ggplot(z, aes(x = school, y = abc, fill = school)) + geom_bar(stat = "identity")
grouped_profs =
profs %>% group_by(name, school, sex, department) %>%
summarise_if(is.numeric, mean, na.rm = T) %>%
mutate(
Accessible.Outside.of.Class = accessible.outside.class/total_tags * 100,
`Amazing Lectures` = amazing.lectures/total_tags * 100,
`Beware of Pop Quizzes` = beware.of.pop.quizzes/total_tags * 100,
Caring = caring/total_tags * 100,
`Clear Grading Criteria` = clear.grading.criteria/total_tags * 100,
`Extra Credit` = extra.credit/total_tags * 100,
`Get Ready to Read` = get.ready.to.read/total_tags * 100,
`Gives Good Feedback` = gives.good.feedback/total_tags * 100,
`Graded by Few Things` = graded.by.few.things/total_tags * 100,
`Group Projects` = group.projects/total_tags * 100,
Hilarious = hilarious/total_tags * 100,
Inspirational = inspirational/total_tags * 100,
`Lecture Heavy` = lecture.heavy/total_tags * 100,
`Lots of Homework` = lots.of.homework/total_tags * 100,
`Participation Matters` = participation.matters/total_tags * 100,
Respected = respected/total_tags * 100,
`Skip Class? You won't Pass` = skip.class.you.wont.pass/total_tags * 100,
`So Many Papers` = so.many.papers/total_tags * 100,
`Test Heavy` = test.heavy/total_tags * 100,
`Tough Grader` = tough.grader/total_tags * 100)
x = grouped_profs[, c(1:4, 28:47)] %>% group_by(school, department) %>% summarise_if(is.numeric, mean, na.rm = T)
write.csv(x, "grouped_profs2.csv")
z = x %>% select(`Accessible Outside of Class`, department, school) %>%
filter(department == "Accounting") %>%
group_by(school)
z = x %>% select(Accessible.Outside.of.Class, department, school) %>%
filter(department == "Accounting") %>%
group_by(school)
z
z[is.na(z)] = 0
ggplot(z, aes(x = school, y = Accessible.Outside.of.Class, fill = school)) + geom_bar(stat = "identity")
log(100)
log(1000)
ggplot()
ggplot() + annotate("text", label = "hi")
ggplot(aes(x = 1:10, y = 1:10)) + annotate("text", label = "hi")
ggplot(aes(x = 1:10, y = 1:10))
x = 1:10
y = 1:10
ggplot(aes(x = x, y = y))
m = data.frame(x, y)
x = 1:10
y = 1:10
ggplot(m, aes(x = x, y = y))
ggplot(m, aes(x = x, y = y)) + annotate("text", x = 5, y = 5, label = "hi")
ggplot(m, aes(x = x, y = y)) + annotate("text", x = 5, y = 5, label = "Department Not")
ggplot(m, aes(x = x, y = y)) + annotate("text", x = 5, y = 5, label = "Department Not at College")
ggplot(m, aes(x = x, y = y)) + annotate("text", x = 5, y = 5, label = "Department Not at College") + theme_void()
m = data.frame(x = 1:10, y = 1:10)
m = data.frame(x = 1:10, y = 1:10)
ggplot(m, aes(x = x, y = y)) + annotate("text", x = 5, y = 5, label = "Department Not at College") + theme_void()
ggplot(m, aes(x = x, y = y)) + annotate("text", x = 5, y = 5, label = "Department Not at College") + theme_void()
m = data.frame(x = 1:10, y = 1:10)
ggplot(m, aes(x = x, y = y)) + annotate("text", x = 5, y = 5, label = "Department Not at College") + theme_void()
ggplot(m, aes(x = x, y = y)) +
annotate("text", x = 5, y = 5, label = "Department Not at College") +
theme_void()
m = data.frame(x = 1:10, y = 1:10)
ggplot(m, aes(x = x, y = y)) +
annotate("text", x = 5, y = 5, label = "Department Not at College") +
theme_void()
m = data.frame(x = 1:10, y = 1:10)
ggplot(m, aes(x = x, y = y)) +
annotate("text", x = 5, y = 5, label = "Department Not at College") +
theme_void()
m = data.frame(x = 1:10, y = 1:10)
ggplot(m, aes(x = x, y = y)) +
annotate("text", x = 5, y = 5, label = "Department Not at College") +
theme_void() + ggtitle("Hi", hjust = 0.5)
m = data.frame(x = 1:10, y = 1:10)
ggplot(m, aes(x = x, y = y)) +
annotate("text", x = 5, y = 5, label = "Department Not at College") +
theme_void() + ggtitle("Hi") + theme(plot.title = element_text(hjust = 0.5)
ggplot(m, aes(x = x, y = y)) +
annotate("text", x = 5, y = 5, label = "Department Not at College") +
theme_void() + ggtitle("Hi") + theme(plot.title = element_text(hjust = 0.5))
ggplot(m, aes(x = x, y = y)) +
annotate("text", x = 5, y = 5, label = "Department Not at College") +
theme_void() + ggtitle("Hi") + theme(plot.title = element_text(hjust = 0.5, vjust = 1))
ggplot(m, aes(x = x, y = y)) +
annotate("text", x = 5, y = 5, label = "Department Not at College") +
theme_void() + ggtitle("Hi") + theme(plot.title = element_text(hjust = 0.5, vjust = -1))
ggplot(m, aes(x = x, y = y)) +
annotate("text", x = 1:5, y = 5, label = "Department Not at College") +
theme_void() + ggtitle("Hi") + theme(plot.title = element_text(hjust = 0.5))
ggplot(m, aes(x = x, y = y)) +
annotate("text", x = 5, y = 5, label = "Department Not at College") +
theme_void() + ggtitle("Hi") + theme(plot.title = element_text(hjust = 0.5))
profs["total_tags"] = apply(profs[10:29], 1, sum, na.rm = T)
profs[profs$school == "qns", ]$school = "Queensboro CC"
library(ggplot2)
library(dplyr)
profs = read.csv("profs.csv", stringsAsFactors = F)
profs = profs %>% select(-X, -X.1)
profs$department[grepl("Biological", profs$department)] = "Biology"
profs$department[grepl("Business Te", profs$department)] = "Business"
profs[profs$department == "Science", ]$department = "Physical Sciences"
profs$department[grepl("Theater|Speech", profs$department)] = "Communication"
profs[profs$name == "Greco, Joseph", ]$department = "Communication"
profs[profs$name == "Sokolski, Patricia", ]$department = "Communication"
profs$department[grepl("Allied", profs$department)] = "Health Science"
profs$department[grepl("Health & Physical Education|Physical Education", profs$department)] = "Physical Ed"
profs$department[grepl("Art", profs$department)] = "Art"
profs$department[grepl("Legal", profs$department)] = "Law"
profs$department[grepl("African|Ethnic|Women", profs$department)] = "Cultural Studies"
profs$department[grepl("Foreign|Spanish", profs$department)] = "Languages"
profs$department[grepl("Info", profs$department)] = "Social Science"
profs[profs$name == "Townsend, Charles", ]$department = "Social Science"
profs[profs$name == "Ruiz, Roberto", ]$department = "Philosophy"
profs$department[grepl("History|Political|Philosophy", profs$department)] = "History, Philosophy, Poly Sci"
profs = profs %>% mutate(chili = ifelse(grepl("True", chili), "attractive", "not attractive"))
profs["total_tags"] = apply(profs[10:29], 1, sum, na.rm = T)
profs[profs$school == "qns", ]$school = "Queensboro CC"
profs[profs$school == "king", ]$school = "Kingsboro CC"
profs[profs$school == "nas", ]$school = "Nassau CC"
profs[profs$school == "lg", ]$school = "LaGuardia CC"
profs[profs$school == "man", ]$school = "Borough of Manhattan CC"
grouped_profs =
profs %>% group_by(name, school, sex, department) %>%
summarise_if(is.numeric, mean, na.rm = T) %>%
mutate(
Accessible.Outside.of.Class = accessible.outside.class/total_tags * 100,
`Amazing Lectures` = amazing.lectures/total_tags * 100,
`Beware of Pop Quizzes` = beware.of.pop.quizzes/total_tags * 100,
Caring = caring/total_tags * 100,
`Clear Grading Criteria` = clear.grading.criteria/total_tags * 100,
`Extra Credit` = extra.credit/total_tags * 100,
`Get Ready to Read` = get.ready.to.read/total_tags * 100,
`Gives Good Feedback` = gives.good.feedback/total_tags * 100,
`Graded by Few Things` = graded.by.few.things/total_tags * 100,
`Group Projects` = group.projects/total_tags * 100,
Hilarious = hilarious/total_tags * 100,
Inspirational = inspirational/total_tags * 100,
`Lecture Heavy` = lecture.heavy/total_tags * 100,
`Lots of Homework` = lots.of.homework/total_tags * 100,
`Participation Matters` = participation.matters/total_tags * 100,
Respected = respected/total_tags * 100,
`Skip Class? You won't Pass` = skip.class.you.wont.pass/total_tags * 100,
`So Many Papers` = so.many.papers/total_tags * 100,
`Test Heavy` = test.heavy/total_tags * 100,
`Tough Grader` = tough.grader/total_tags * 100)
grouped_profs = grouped_profs %>% rename(overall_score_mean = overall_score, difficulty_score_mean = difficulty_score)
profs = merge(profs, grouped_profs[, -(5:27)], by = c("name"), suffixes = c("", "_y")) %>% select(-school_y, -sex_y, -department_y)
write.csv(profs, "profs_cleaned.csv")
x = grouped_profs[, c(1:4, 28:47)] %>% group_by(school, department) %>% summarise_if(is.numeric, mean, na.rm = T)
write.csv(x, "grouped_profs2.csv")
View(grouped_profs)
grouped_profs =
profs %>% group_by(name, school, sex, department) %>%
summarise_if(is.numeric, mean, na.rm = T) %>%
mutate(
`Accessible Outside of Class` = accessible.outside.class/total_tags * 100,
`Amazing Lectures` = amazing.lectures/total_tags * 100,
`Beware of Pop Quizzes` = beware.of.pop.quizzes/total_tags * 100,
Caring = caring/total_tags * 100,
`Clear Grading Criteria` = clear.grading.criteria/total_tags * 100,
`Extra Credit` = extra.credit/total_tags * 100,
`Get Ready to Read` = get.ready.to.read/total_tags * 100,
`Gives Good Feedback` = gives.good.feedback/total_tags * 100,
`Graded by Few Things` = graded.by.few.things/total_tags * 100,
`Group Projects` = group.projects/total_tags * 100,
Hilarious = hilarious/total_tags * 100,
Inspirational = inspirational/total_tags * 100,
`Lecture Heavy` = lecture.heavy/total_tags * 100,
`Lots of Homework` = lots.of.homework/total_tags * 100,
`Participation Matters` = participation.matters/total_tags * 100,
Respected = respected/total_tags * 100,
`Skip Class You won't Pass` = skip.class.you.wont.pass/total_tags * 100,
`So Many Papers` = so.many.papers/total_tags * 100,
`Test Heavy` = test.heavy/total_tags * 100,
`Tough Grader` = tough.grader/total_tags * 100)
grouped_profs = grouped_profs %>% rename(overall_score_mean = overall_score, difficulty_score_mean = difficulty_score)
profs = merge(profs, grouped_profs[, -(5:27)], by = c("name"), suffixes = c("", "_y")) %>% select(-school_y, -sex_y, -department_y)
profs
write.csv(profs, "profs_cleaned2.csv")
x = grouped_profs[, c(1:4, 28:47)] %>% group_by(school, department) %>% summarise_if(is.numeric, mean, na.rm = T)
write.csv(x, "grouped_profs3.csv")
grouped_profs =
profs %>% group_by(name, school, sex, department) %>%
summarise_if(is.numeric, mean, na.rm = T) %>%
mutate(
`Accessible Outside of Class` = accessible.outside.class/total_tags * 100,
`Amazing Lectures` = amazing.lectures/total_tags * 100,
`Beware of Pop Quizzes` = beware.of.pop.quizzes/total_tags * 100,
Caring = caring/total_tags * 100,
`Clear Grading Criteria` = clear.grading.criteria/total_tags * 100,
`Extra Credit` = extra.credit/total_tags * 100,
`Get Ready to Read` = get.ready.to.read/total_tags * 100,
`Gives Good Feedback` = gives.good.feedback/total_tags * 100,
`Graded by Few Things` = graded.by.few.things/total_tags * 100,
`Group Projects` = group.projects/total_tags * 100,
Hilarious = hilarious/total_tags * 100,
Inspirational = inspirational/total_tags * 100,
`Lecture Heavy` = lecture.heavy/total_tags * 100,
`Lots of Homework` = lots.of.homework/total_tags * 100,
`Participation Matters` = participation.matters/total_tags * 100,
Respected = respected/total_tags * 100,
`Skip Class You won't Pass` = skip.class.you.wont.pass/total_tags * 100,
`So Many Papers` = so.many.papers/total_tags * 100,
`Test Heavy` = test.heavy/total_tags * 100,
`Tough Grader` = tough.grader/total_tags * 100)
View(grouped_profs)
library(ggplot2)
library(dplyr)
profs = read.csv("profs.csv", stringsAsFactors = F)
profs = profs %>% select(-X, -X.1)
profs$department[grepl("Biological", profs$department)] = "Biology"
profs$department[grepl("Business Te", profs$department)] = "Business"
profs[profs$department == "Science", ]$department = "Physical Sciences"
profs$department[grepl("Theater|Speech", profs$department)] = "Communication"
profs[profs$name == "Greco, Joseph", ]$department = "Communication"
profs[profs$name == "Sokolski, Patricia", ]$department = "Communication"
profs$department[grepl("Allied", profs$department)] = "Health Science"
profs$department[grepl("Health & Physical Education|Physical Education", profs$department)] = "Physical Ed"
profs$department[grepl("Art", profs$department)] = "Art"
profs$department[grepl("Legal", profs$department)] = "Law"
profs$department[grepl("African|Ethnic|Women", profs$department)] = "Cultural Studies"
profs$department[grepl("Foreign|Spanish", profs$department)] = "Languages"
profs$department[grepl("Info", profs$department)] = "Social Science"
profs[profs$name == "Townsend, Charles", ]$department = "Social Science"
profs[profs$name == "Ruiz, Roberto", ]$department = "Philosophy"
profs$department[grepl("History|Political|Philosophy", profs$department)] = "History, Philosophy, Poly Sci"
profs = profs %>% mutate(chili = ifelse(grepl("True", chili), "attractive", "not attractive"))
profs["total_tags"] = apply(profs[10:29], 1, sum, na.rm = T)
profs[profs$school == "qns", ]$school = "Queensboro CC"
profs[profs$school == "king", ]$school = "Kingsboro CC"
profs[profs$school == "nas", ]$school = "Nassau CC"
profs[profs$school == "lg", ]$school = "LaGuardia CC"
profs[profs$school == "man", ]$school = "Borough of Manhattan CC"
grouped_profs =
profs %>% group_by(name, school, sex, department) %>%
summarise_if(is.numeric, mean, na.rm = T) %>%
mutate(
`Accessible Outside of Class` = accessible.outside.class/total_tags * 100,
`Amazing Lectures` = amazing.lectures/total_tags * 100,
`Beware of Pop Quizzes` = beware.of.pop.quizzes/total_tags * 100,
Caring = caring/total_tags * 100,
`Clear Grading Criteria` = clear.grading.criteria/total_tags * 100,
`Extra Credit` = extra.credit/total_tags * 100,
`Get Ready to Read` = get.ready.to.read/total_tags * 100,
`Gives Good Feedback` = gives.good.feedback/total_tags * 100,
`Graded by Few Things` = graded.by.few.things/total_tags * 100,
`Group Projects` = group.projects/total_tags * 100,
Hilarious = hilarious/total_tags * 100,
Inspirational = inspirational/total_tags * 100,
`Lecture Heavy` = lecture.heavy/total_tags * 100,
`Lots of Homework` = lots.of.homework/total_tags * 100,
`Participation Matters` = participation.matters/total_tags * 100,
Respected = respected/total_tags * 100,
`Skip Class You won't Pass` = skip.class.you.wont.pass/total_tags * 100,
`So Many Papers` = so.many.papers/total_tags * 100,
`Test Heavy` = test.heavy/total_tags * 100,
`Tough Grader` = tough.grader/total_tags * 100)
grouped_profs = grouped_profs %>% rename(overall_score_mean = overall_score, difficulty_score_mean = difficulty_score)
profs = merge(profs, grouped_profs[, -(5:27)], by = c("name"), suffixes = c("", "_y")) %>% select(-school_y, -sex_y, -department_y)
x = grouped_profs[, c(1:4, 28:47)] %>% group_by(school, department) %>% summarise_if(is.numeric, mean, na.rm = T)
write.csv(x, "grouped_profs3.csv")
View(profs)
shiny::runApp()
shiny::runApp()
